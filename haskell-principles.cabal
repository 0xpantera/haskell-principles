cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.31.2.
--
-- see: https://github.com/sol/hpack
--
-- hash: f1d0c0a948d10fcacbe409eb86c28d5689765e7ca3a98ec6189d4ad60a18daa5

name:           haskell-principles
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/Francososa/haskell-principles#readme>
homepage:       https://github.com/Francososa/haskell-principles#readme
bug-reports:    https://github.com/Francososa/haskell-principles/issues
author:         Francisco Sosa
maintainer:     franky.sosa@gmail.com
copyright:      Copyright (c) 2018-2020 Francisco Sosa
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    ChangeLog.md

source-repository head
  type: git
  location: https://github.com/Francososa/haskell-principles

library
  exposed-modules:
      FoldableExamples.FoldableInstances
      InDepth.DCountZeros
      InDepth.DFileCounter
      InDepth.DiceGame
      InDepth.DIORef
      InDepth.DMaybe
      InDepth.DReader
      InDepth.DStref
      InDepth.DSumList
      InDepth.DWeapon
      InDepth.Gcd
      InDepth.GenSQL
      InDepth.Rpn.EvalRPN
      Lib
      MonadExamples.DepthMaybe
      MonadExamples.DepthReader
      MonadExamples.DepthWriter
      MonadExamples.EitherMonad
      MonadExamples.Exercises
      MonadExamples.MaybeMonad
      MonadExamples.MonadComp
      MonadTrans.EitherT
      MonadTrans.FuncCompose
      MonadTrans.IdentityT
      MonadTrans.MaybeT
      MonadTrans.OuterInner
      MonadTrans.ReaderT
      MonadTrans.Scotty
      MonadTrans.StateT
      ParserCombinators.AltParsing
      ParserCombinators.Fractions
      ParserCombinators.LearnParsers
      ReaderExamples.Bip
      ReaderExamples.FunctionApp
      ReaderExamples.FunctionMonad
      ReaderExamples.PrettyReader
      ReaderExamples.WarmUp
      StateExamples.FizzBuzz
      StateExamples.RandomExample
      StateExamples.RandomExample2
      StateExamples.StateImpl
      TraversableExamples.HttpStuff
  other-modules:
      Paths_haskell_principles
  hs-source-dirs:
      src
  build-depends:
      aeson
    , base >=4.7 && <5
    , bytestring
    , dlist
    , extra
    , mtl
    , random
    , raw-strings-qq
    , scotty
    , text
    , transformers
    , trifecta
    , wreq
  default-language: Haskell2010

executable haskell-principles-exe
  main-is: Main.hs
  other-modules:
      Paths_haskell_principles
  hs-source-dirs:
      app
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      aeson
    , base >=4.7 && <5
    , bytestring
    , dlist
    , extra
    , haskell-principles
    , mtl
    , random
    , raw-strings-qq
    , scotty
    , text
    , transformers
    , trifecta
    , wreq
  default-language: Haskell2010

test-suite haskell-principles-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Paths_haskell_principles
  hs-source-dirs:
      test
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      aeson
    , base >=4.7 && <5
    , bytestring
    , dlist
    , extra
    , haskell-principles
    , mtl
    , random
    , raw-strings-qq
    , scotty
    , text
    , transformers
    , trifecta
    , wreq
  default-language: Haskell2010
